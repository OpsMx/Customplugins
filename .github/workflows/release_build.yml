name: Branch custom  plugin
on:
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch_name to create Tag'
        default: 'v4.0'
        required: true
        type: string
      release:
        description: 'Release_name to create Tag'
        default: 'v4.0-custom2'
        required: true
        type: string

jobs:
  publish-plugin:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
         ref: refs/heads/${{ inputs.branch }}
      - uses: actions/setup-java@v2
        with:
          java-version: 11
          distribution: 'zulu'
      - name: Build
        env:
         FILES: gate-policy gate-verify gate-testverify gate-approval rbac echo-events
        run: | 
            npm install --global yarn
            yarn --version
            
            for config in $FILES
             do
              cd $config   
              ./gradlew clean releaseBundle
              cd ..
             done
            
            mv ./gate-policy/build/distributions/policyPlugin-v1.0.1-SNAPSHOT.zip PolicyPlugin-v1.0.1-SNAPSHOT.zip  
            mv ./gate-verify/build/distributions/VerificationPlugin-v1.0.1-SNAPSHOT.zip VerificationPlugin-v1.0.1-SNAPSHOT.zip
            mv ./gate-testverify/build/distributions/TestVerificationPlugin-v1.0.1-SNAPSHOT.zip TestVerificationPlugin-v1.0.1-SNAPSHOT.zip
            mv ./gate-approval/build/distributions/ApprovalStagePlugin-v1.0.1-SNAPSHOT.zip ApprovalStagePlugin-v1.0.1-SNAPSHOT.zip
            mv ./rbac/build/distributions/RbacPlugin-v1.0.1-SNAPSHOT.zip RbacPlugin-v1.0.1-SNAPSHOT.zip
            mv ./echo-events/build/distributions/EchoEventPlugin-v1.0.1-SNAPSHOT.zip EchoEventPlugin-v1.0.1-SNAPSHOT.zip


               shasum -a512 PolicyPlugin-v1.0.1-SNAPSHOT.zip
               shasum -a512 VerificationPlugin-v1.0.1-SNAPSHOT.zip
               shasum -a512 TestVerificationPlugin-v1.0.1-SNAPSHOT.zip
               shasum -a512 ApprovalStagePlugin-v1.0.1-SNAPSHOT.zip
               shasum -a512 RbacPlugin-v1.0.1-SNAPSHOT.zip
               shasum -a512 EchoEventPlugin-v1.0.1-SNAPSHOT.zip
               
               token="${{ secrets.GIT_TOKEN }}"

             tag=${{ inputs.release }}
             name="OES-customGate-${tag}"
             description="custom-plugin release version :: ${tag}"
             release=$(curl -XPOST -H "Authorization:token $token" --data "{\"tag_name\": \"$tag\", \"target_commitish\": \"main\", \"name\": \"$name\", \"body\": \"$description\", \"draft\": false, \"prerelease\": false}" https://api.github.com/repos/OpsMx/Customplugins/releases)
             id=$(echo "$release" | sed -n -e 's/"id":\ \([0-9]\+\),/\1/p' | head -n 1 | sed 's/[[:blank:]]//g')
    
              curl -XPOST -H "Authorization:token $token" -H "Content-Type:application/octet-stream" --data-binary @PolicyPlugin-v1.0.1-SNAPSHOT.zip https://uploads.github.com/repos/OpsMx/Customplugins/releases/$id/assets?name=policyPlugin-v1.0.1-SNAPSHOT.zip
              curl -XPOST -H "Authorization:token $token" -H "Content-Type:application/octet-stream" --data-binary @VerificationPlugin-v1.0.1-SNAPSHOT.zip https://uploads.github.com/repos/OpsMx/Customplugins/releases/$id/assets?name=VerificationPlugin-v1.0.1-SNAPSHOT.zip
              curl -XPOST -H "Authorization:token $token" -H "Content-Type:application/octet-stream" --data-binary @TestVerificationPlugin-v1.0.1-SNAPSHOT.zip https://uploads.github.com/repos/OpsMx/Customplugins/releases/$id/assets?name=TestVerificationPlugin-v1.0.1-SNAPSHOT.zip
              curl -XPOST -H "Authorization:token $token" -H "Content-Type:application/octet-stream" --data-binary @ApprovalStagePlugin-v1.0.1-SNAPSHOT.zip https://uploads.github.com/repos/OpsMx/Customplugins/releases/$id/assets?name=ApprovalStagePlugin-v1.0.1-SNAPSHOT.zip
              curl -XPOST -H "Authorization:token $token" -H "Content-Type:application/octet-stream" --data-binary @RbacPlugin-v1.0.1-SNAPSHOT.zip https://uploads.github.com/repos/OpsMx/Customplugins/releases/$id/assets?name=RbacPlugin-v1.0.1-SNAPSHOT.zip
              curl -XPOST -H "Authorization:token $token" -H "Content-Type:application/octet-stream" --data-binary @EchoEventPlugin-v1.0.1-SNAPSHOT.zip https://uploads.github.com/repos/OpsMx/Customplugins/releases/$id/assets?name=EchoEventPlugin-v1.0.1-SNAPSHOT.zip

  build-orca:
    runs-on: ubuntu-latest
    needs: [publish-plugin]
    if: always()
    steps:
    - name: Checkout OpsMx orca repo
      uses: actions/checkout@v3
      with:
        repository: opsmx/orca-oes
        ref: refs/heads/OES-1.30.1
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    - uses: actions/setup-java@v2
      with:
        java-version: 17
        distribution: 'temurin'
    - name: Prepare build variables
      id: build_variables
      run: |
          echo ::set-output name=REPO::ubi8-orca-cve
          echo ::set-output name=VERSION::"$(git rev-parse --short HEAD)-$(date --utc +'%Y%m%d%H%M')"
    - name: Login to Quay
      uses: docker/login-action@v1
        # use service account flow defined at: https://github.com/docker/login-action#service-account-based-authentication-1
      with:
          registry: quay.io
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_KEY }}
    - name: Build
      env:
          ORG_GRADLE_PROJECT_version: ${{ steps.build_variables.outputs.VERSION }}
      run: ./gradlew --no-daemon -PenableCrossCompilerPlugin=true orca-web:installDist -x test
    - name: dockerBuildpush
      uses: docker/build-push-action@v2
      with:
          context: .
          build-args: |
            CUSTOMPLUGIN_RELEASEVERSION=${{ inputs.release }}
          file: docker/ubi8/Dockerfile-fips
          push: true
          tags: |
            "${{ env.CONTAINER_REGISTRY }}/${{ steps.build_variables.outputs.REPO }}:${{ steps.build_variables.outputs.VERSION }}"
    - name: dockerBuildpushdev
      uses: docker/build-push-action@v2
      with:
         context: .
         build-args: |
            CUSTOMPLUGIN_RELEASEVERSION=${{ inputs.release }}
         file: docker/ubi8/Dockerfile-dev
         push: true
         tags: |
            "${{ env.CONTAINER_REGISTRY }}/${{ steps.build_variables.outputs.REPO }}:${{ steps.build_variables.outputs.VERSION }}-dev"
