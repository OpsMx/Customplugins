import org.yaml.snakeyaml.Yaml

buildscript {
  repositories {
    mavenCentral()
  }
  dependencies {
    classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
    classpath "org.jetbrains.kotlin:kotlin-allopen:$kotlinVersion"
  }
}

apply plugin: "io.spinnaker.plugin.service-extension"
apply plugin: "maven-publish"
apply plugin: "kotlin"
apply plugin: "kotlin-kapt"
apply plugin: "kotlin-spring"

repositories {
  mavenCentral()
}

sourceSets {
  main {
    java { srcDirs = ['src/main/java'] }
  }
}

spinnakerPlugin {
  serviceName = "front50"
  pluginClass = "com.opsmx.plugin.stage.custom.StaticPolicyPlugin"
  requires="front50>=0.0.0"
}
configurations {
    // configuration that holds jars to include in the jar
    extraLibs
}

dependencies {
  compileOnly "org.pf4j:pf4j:${pf4jVersion}"
  compileOnly "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlinVersion"
  compileOnly "io.spinnaker.kork:kork-plugins-api:${korkVersion}"
  compileOnly "io.spinnaker.kork:kork-web:${korkVersion}"
  compileOnly "io.spinnaker.front50:front50-api:${front50Version}"
  kapt "org.pf4j:pf4j:${pf4jVersion}"

  compileOnly group: 'com.squareup.retrofit', name: 'retrofit', version: '1.9.0'
  compileOnly group: 'com.squareup.retrofit', name: 'converter-jackson', version: '1.9.0'
  compileOnly group: 'com.jakewharton.retrofit', name: 'retrofit1-okhttp3-client', version: '1.1.0'
  implementation group: 'com.jcraft', name: 'jsch', version: '0.1.55'


  testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:5.4.0"
  testRuntimeOnly "org.junit.platform:junit-platform-launcher:1.4.0"
  testRuntimeOnly "org.junit.platform:junit-platform-commons:1.5.2"
  implementation("org.apache.commons:commons-lang3:3.0")
  
  implementation 'com.google.code.gson:gson:2.8.8'
  /*extraLibs group: 'com.netflix.spinnaker.front50', name: 'front50-core', version: '2.23.0'
  configurations.compile.extendsFrom(configurations.extraLibs)*/
}

configurations.all {
  resolutionStrategy.eachDependency { DependencyResolveDetails details ->
    if (details.requested.group == 'org.apache.logging.log4j') {
      details.useVersion '2.16.0'
    }
  }
}

jar {
    from {
            configurations.extraLibs.collect { it.isDirectory() ? it : zipTree(it) }
        }
}
tasks.withType(Test) {
  useJUnitPlatform()
}
